user  nginx;
worker_processes  1;

error_log  /proc/self/fd/2 warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    server_names_hash_bucket_size 128;
    types_hash_bucket_size 128;
    proxy_max_temp_file_size 0;

    log_format timed_combined '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $body_bytes_sent '
        '"$http_referer" "$http_user_agent" '
        '$request_time $upstream_response_time $pipe';

    access_log  /proc/self/fd/2  timed_combined;

#log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                  '$status $body_bytes_sent "$http_referer" '
#                  '"$http_user_agent" "$http_x_forwarded_for"';

#access_log  /proc/self/fd/2  main;


    client_max_body_size 500M;
    client_body_temp_path /tmp/nginx 1 2;
    sendfile off;
    proxy_buffering off;
    tcp_nopush     on;
    tcp_nodelay on;

    keepalive_timeout  65;
    index   index.html index.htm;
    fastcgi_buffering off;

    gzip on;
    gzip_disable "msie6";

    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 16 8k;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/xml+rss;
    {{ if service $backend }}
    upstream {{ $backend }} {
# write the address:port pairs for each healthy backend instance
        {{range service $backend }}
        server {{.Address}}:{{.Port}};
        {{end}}
        least_conn;
    }{{ end }}

    server {
        listen       80;
        server_name  _;

        location /health {
            stub_status;
            allow 127.0.0.1;
            deny all;
        }
        {{ if service $backend }}
        location = /{{ $backend }} {
            return 301 /{{ $backend }}/;
        }

        location /{{ $backend }} {
            proxy_pass http://{{ $backend }};
            proxy_redirect off;
        }{{ end }}
    }

    include /etc/nginx/conf.d/*.conf;
}

